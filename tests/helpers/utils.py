from adastra.sep.models import DataProduct, Owner, View

valid_product = DataProduct(
    name='Test Product',
    catalogName='objectstore',
    dataDomainId='d8b34c31-dba7-47fd-87ef-73778e2ad675',
    summary='Generated by PyTest',
    description='Generated by PyTest',
    owners=[Owner(name='Test', email="test@example.com")],
    views=[View(name='test_view', definitionQuery='select 1 as one')]
)

duplicate_product = valid_product.model_copy(deep=True)

invalid_product_missing_name = valid_product.model_copy(update={'name': None}, deep=True)

invalid_product_empty_name = valid_product.model_copy(update={'name': ''}, deep=True)

invalid_product_missing_catalog = valid_product.model_copy(update={'name': 'Product 1', 'catalogName': None}, deep=True)

invalid_product_empty_catalog = valid_product.model_copy(update={'name': 'Product 2', 'catalogName': ''}, deep=True)

invalid_product_missing_domain = valid_product.model_copy(update={'name': 'Product 3', 'dataDomainId': None}, deep=True)

invalid_product_empty_domain = valid_product.model_copy(update={'name': 'Product 4', 'dataDomainId': ''}, deep=True)

invalid_product_missing_summary = valid_product.model_copy(update={'name': 'Product 5', 'summary': None}, deep=True)

invalid_product_empty_summary = valid_product.model_copy(update={'name': 'Product 6', 'summary': ''}, deep=True)

invalid_product_wrong_domain = valid_product.model_copy(update={'name': 'Product 7', 'dataDomainId': '11111111-1111-1111-111111111111'}, deep=True)

invalid_product_wrong_catalog = valid_product.model_copy(update={'name': 'Product 8', 'catalogName': 'othercatalog'}, deep=True)

product_without_owner = valid_product.model_copy(update={'name': 'Product Without Owner', 'owners': []}, deep=True)

product_without_datasets = valid_product.model_copy(update={'name': 'Product Without Datasets', 'views': []}, deep=True)
